(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{77:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return i}));var n=a(3),r=a(7),b=(a(0),a(86)),l={id:"defaultvar",title:"Default Variables"},c={unversionedId:"defaultvar",id:"defaultvar",isDocsHomePage:!1,title:"Default Variables",description:"- Meta Variables",source:"@site/docs\\defaultvariables.md",slug:"/defaultvar",permalink:"/boopie-docs/docs/defaultvar",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/defaultvariables.md",version:"current",sidebar:"someSidebar",previous:{title:"TagScriptEngine Blocks",permalink:"/boopie-docs/docs/tagscript"},next:{title:"Parsing Blocks",permalink:"/boopie-docs/docs/parsing"}},o=[{value:"Meta Variables",id:"meta-variables",children:[{value:"Args Block",id:"args-block",children:[]},{value:"Uses Block",id:"uses-block",children:[]}]},{value:"Discord Object Variables",id:"discord-object-variables",children:[{value:"Author Block",id:"author-block",children:[]},{value:"Target Block",id:"target-block",children:[]},{value:"Channel Block",id:"channel-block",children:[]},{value:"Server Block",id:"server-block",children:[]}]}],p={toc:o};function i(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#meta-variables"}),"Meta Variables"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#args-block"}),"Args Block")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#uses-block"}),"Uses Block")))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#discord-object-variables"}),"Discord Object Variables"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#author-block"}),"Author Block")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#target-block"}),"Target Block")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#channel-block"}),"Channel Block")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#server-block"}),"Server Block"))))),Object(b.b)("p",null,"The following blocks will be present and accessable as defaults when running any tag."),Object(b.b)("h2",{id:"meta-variables"},"Meta Variables"),Object(b.b)("p",null,"Meta variables reference meta attributes about the tag invocation."),Object(b.b)("h3",{id:"args-block"},"Args Block"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"TagScriptEngine.adapter.StringAdapter")),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"{args}")," block represents the arguments passed after the tag name when invoking a tag. If no parameter is passed, it returns all the text after the invocation name. If an index is passed, it will split the arguments into a list by the given splitter, and return the word at that index. The default splitter is a \u201d \u201c."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Usage:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{args([index]):[splitter]>}")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Payload:")," splitter"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameter:")," index"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Examples:")),Object(b.b)("p",null,"In the following examples, assume the tag\u2019s name is ",Object(b.b)("inlineCode",{parentName:"p"},"argstag")," and the message content is ",Object(b.b)("inlineCode",{parentName:"p"},"[p]argstag My dog is cute! Would you like to see a photo?"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"{args}\n# My dog is cute! Would you like to see a photo?\n\n{args(1)}\n# My\n\n{args(2):!}\n# Would you like to see a photo?\n")),Object(b.b)("h3",{id:"uses-block"},"Uses Block"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"TagScriptEngine.adapter.IntAdapter")),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"{uses}")," block returns the number of times a tag has been used."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Usage:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{uses}")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Payload:")," None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameter:")," None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Examples:")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"{uses}\n# 1\n")),Object(b.b)("h2",{id:"discord-object-variables"},"Discord Object Variables"),Object(b.b)("p",null,"These blocks reference Discord objects from the tag invocation context."),Object(b.b)("h3",{id:"author-block"},"Author Block"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"tags.adapters.MemberAdapter")),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"{author}")," block with no parameters returns the tag invoker\u2019s full username and discriminator, but passing the attributes listed below to the block payload will return that attribute instead."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Aliases:")," ",Object(b.b)("inlineCode",{parentName:"p"},"user")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Usage:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{author([attribute])")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Payload:")," None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameter:")," attribute, None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Attributes:")),Object(b.b)("p",null,"id",Object(b.b)("br",{parentName:"p"}),"\n","The author\u2019s Discord ID."),Object(b.b)("p",null,"name",Object(b.b)("br",{parentName:"p"}),"\n","The author\u2019s username."),Object(b.b)("p",null,"nick",Object(b.b)("br",{parentName:"p"}),"\n","The author\u2019s nickname, if they have one, else their username."),Object(b.b)("p",null,"avatar",Object(b.b)("br",{parentName:"p"}),"\n","A link to the author\u2019s avatar, which can be used in embeds."),Object(b.b)("p",null,"discriminator",Object(b.b)("br",{parentName:"p"}),"\n","The author\u2019s discriminator."),Object(b.b)("p",null,"created","_","at",Object(b.b)("br",{parentName:"p"}),"\n","The author\u2019s account creation date."),Object(b.b)("p",null,"timestamp",Object(b.b)("br",{parentName:"p"}),"\n","The author\u2019s account creation date as a UTC timestamp."),Object(b.b)("p",null,"joined","_","at",Object(b.b)("br",{parentName:"p"}),"\n","The date the author joined the server."),Object(b.b)("p",null,"mention",Object(b.b)("br",{parentName:"p"}),"\n","A formatted text that pings the author."),Object(b.b)("p",null,"bot",Object(b.b)("br",{parentName:"p"}),"\n","Whether or not the author is a bot."),Object(b.b)("h3",{id:"target-block"},"Target Block"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"{target}")," block follows the same usage and has the same attributes as the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#authorblock"}),"Author Block"),", but it defaults to the mentioned user in the tag invocation message if any users are mentioned, or the tag author."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Usage:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{target}")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Aliases:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{member}")),Object(b.b)("h3",{id:"channel-block"},"Channel Block"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"tags.adapters.TextChannelAdapter")),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"{channel}")," block with no parameters returns the channel\u2019s full name but passing the attributes listed below to the block payload will return that attribute instead."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Usage:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{channel([attribute])")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Payload:")," None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameter:")," attribute, None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Attributes:")),Object(b.b)("p",null,"id",Object(b.b)("br",{parentName:"p"}),"\n","The channel\u2019s ID."),Object(b.b)("p",null,"name",Object(b.b)("br",{parentName:"p"}),"\n","The channel\u2019s name."),Object(b.b)("p",null,"created","_","at",Object(b.b)("br",{parentName:"p"}),"\n","The channel\u2019s creation date."),Object(b.b)("p",null,"timestamp",Object(b.b)("br",{parentName:"p"}),"\n","The channel\u2019s creation date as a UTC timestamp."),Object(b.b)("p",null,"nsfw",Object(b.b)("br",{parentName:"p"}),"\n","Whether the channel is nsfw."),Object(b.b)("p",null,"mention",Object(b.b)("br",{parentName:"p"}),"\n","A formatted text that pings the channel."),Object(b.b)("p",null,"topic",Object(b.b)("br",{parentName:"p"}),"\n","The channel\u2019s topic."),Object(b.b)("h3",{id:"server-block"},"Server Block"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"tags.adapters.GuildAdapter")),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"{server}")," block with no parameters returns the server\u2019s name but passing the attributes listed below to the block payload will return that attribute instead."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Aliases:")," ",Object(b.b)("inlineCode",{parentName:"p"},"guild")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Usage:")," ",Object(b.b)("inlineCode",{parentName:"p"},"{server([attribute])")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Payload:")," None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameter:")," attribute, None"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Attributes:")),Object(b.b)("p",null,"id",Object(b.b)("br",{parentName:"p"}),"\n","The server\u2019s ID."),Object(b.b)("p",null,"name",Object(b.b)("br",{parentName:"p"}),"\n","The server\u2019s name."),Object(b.b)("p",null,"icon",Object(b.b)("br",{parentName:"p"}),"\n","A link to the server\u2019s icon, which can be used in embeds."),Object(b.b)("p",null,"created","_","at",Object(b.b)("br",{parentName:"p"}),"\n","The server\u2019s creation date."),Object(b.b)("p",null,"timestamp",Object(b.b)("br",{parentName:"p"}),"\n","The server\u2019s creation date as a UTC timestamp."),Object(b.b)("p",null,"member","_","count",Object(b.b)("br",{parentName:"p"}),"\n","The server\u2019s member count."),Object(b.b)("p",null,"description",Object(b.b)("br",{parentName:"p"}),"\n","The server\u2019s description if one is set, or \u201cNo description\u201d."))}i.isMDXComponent=!0},86:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),i=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=i(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=i(a),O=n,j=s["".concat(l,".").concat(O)]||s[O]||u[O]||b;return a?r.a.createElement(j,c(c({ref:t},p),{},{components:a})):r.a.createElement(j,c({ref:t},p))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=O;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var p=2;p<b;p++)l[p]=a[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);